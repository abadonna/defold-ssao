function init(self)
	msg.post(".", "acquire_input_focus")
	msg.post("@render:", "use_camera_projection")
	msg.post("@render:", "clear_color", {color = vmath.vector4(0.5, 0.5, 0.5, 0)})
	msg.post("camera", "acquire_camera_focus")
	
	self.touch_down = false


	math.randomseed(os.time())
	math.random()
	math.random()
	math.random()
	
	for i = 1, 64 do
		local kernel = vmath.vector4(
		math.random() * 2 - 1, 
		math.random() * 2 - 1, 
		math.random(), 0)
		kernel = vmath.normalize(kernel)
		local scale = (i - 1) / 64.0
		scale = vmath.lerp(scale * scale, 0.1, 1.0)
		kernel = kernel * scale
		go.set("/go#model", "kernel", kernel, {index = i})
	end

	for i = 1, 16 do
		local noise = vmath.vector4(
		math.random() * 2 - 1,
		math.random() * 2 - 1,
		0, 0)

		noise = vmath.normalize(noise)
		go.set("/go#model", "noise", noise, {index = i})
	end

	
end

function on_input(self, action_id, action)
	-- move directional light based on input
	if action_id == hash("touch") then
		self.touch_down = true
		if action.released then
			self.touch_down = false
		end
	end

	if self.touch_down and action_id == nil then
		go.set(".", "euler.y", go.get(".", "euler.y") + action.dx * 0.5)
		go.set(".", "euler.x", go.get(".", "euler.x") - action.dy * 0.5)
	end
end